{"version":3,"sources":["components/panel/panel.jsx"],"names":[],"mappings":";;;;IAAO,KAAK,2BAAM,cAAc;;IACzB,UAAU,2BAAM,YAAY;;IAC5B,CAAC,2BAAM,QAAQ;;IAEf,SAAS,2BAAM,cAAc;;QAE7B,mCAAmC;;QACnC,cAAc;;AAErB,IAAI,KAAK,GAAG,KAAK,CAAC,WAAW,CAAC;;AAE5B,aAAW,EAAE,OAAO;;AAEpB,WAAS,EAAE;AACT,SAAK,EAAE,KAAK,CAAC,SAAS,CAAC,MAAM;AAC7B,gBAAY,EAAE,KAAK,CAAC,SAAS,CAAC,KAAK;AACnC,WAAO,EAAE,KAAK,CAAC,SAAS,CAAC,KAAK;GAC/B;;AAED,iBAAe,EAAA,2BAAG;AAChB,WAAO;AACL,0BAAoB,EAAE,IAAI,CAAC,KAAK,CAAC,oBAAoB;KACtD,CAAC;GACH;;;;;;;AAOD,oBAAkB,EAAA,4BAAC,WAAW,EAAE;AAC9B,QAAI,CAAC,QAAQ,CAAC,EAAC,oBAAoB,EAAE,WAAW,CAAC,EAAE,EAAC,CAAC,CAAC;GACvD;;;;;;;AAOD,eAAa,EAAA,uBAAC,MAAM,EAAE;AACpB,UAAM,CAAC,QAAQ,EAAE,CAAC;GACnB;;AAED,QAAM,EAAA,kBAAG;AACP,QAAI,YAAY,GAAG,IAAI,CAAC,KAAK,CAAC,YAAY,CAAC;AAC3C,QAAI,OAAO,GAAG,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC;;AAEjC,QAAI,kBAAkB,GAAG,CAAC,CAAC,IAAI,CAAC,YAAY,EAAE,EAAC,EAAE,EAAE,IAAI,CAAC,KAAK,CAAC,oBAAoB,EAAC,CAAC,CAAC;;AAErF,WACE;;QAAK,SAAS,EAAE,UAAU,CAAC,IAAI,CAAC,KAAK,CAAC,SAAS,EAAE,OAAO,CAAC,AAAC;MACxD;;UAAK,SAAS,EAAC,cAAc;QAC3B;;YAAK,SAAS,EAAC,oBAAoB;UACjC;;cAAK,SAAS,EAAC,aAAa,EAAC,KAAK,EAAE,IAAI,CAAC,KAAK,CAAC,KAAK,AAAC;YAClD,IAAI,CAAC,KAAK,CAAC,KAAK;WACb;SACF;QACN;;YAAK,SAAS,EAAC,eAAe;UAC5B,oBAAC,SAAS,IAAE,oBAAoB,EAAE,IAAI,CAAC,KAAK,CAAC,oBAAoB,AAAC;AACtD,wBAAY,EAAE,YAAY,AAAC;AAC3B,mBAAO,EAAE,OAAO,AAAC;AACjB,oBAAQ,EAAE,IAAI,CAAC,aAAa,AAAC;AAC7B,wBAAY,EAAE,IAAI,CAAC,kBAAkB,AAAC,GAAE;SAChD;OACF;MACN;;UAAK,SAAS,EAAC,YAAY;QACxB,kBAAkB,CAAC,MAAM,EAAE;OACxB;KACF,CACN;GACH;;CAEF,CAAC,CAAC;;iBAEY,KAAK","file":"components/panel/panel.jsx","sourcesContent":["import React from 'react/addons';\nimport classNames from 'classnames';\nimport _ from 'lodash';\n\nimport PanelMenu from './panel-menu';\n\nimport 'font-awesome/css/font-awesome.css';\nimport './style.scss';\n\nvar Panel = React.createClass({\n\n  displayName: 'Panel',\n\n  propTypes: {\n    title: React.PropTypes.string, // Panel title\n    displayModes: React.PropTypes.array,\n    actions: React.PropTypes.array\n  },\n\n  getInitialState() {\n    return {\n      currentDisplayModeId: this.props.defaultDisplayModeId\n    };\n  },\n\n  /**\n   * Called when a display mode is selected from the PanelMenu\n   * Switches to the given display mode\n   * @param {Object} displayMode\n   */\n  _handleDisplayMode(displayMode) {\n    this.setState({currentDisplayModeId: displayMode.id});\n  },\n\n  /**\n   * Called when an action is selected from the PanelMenu\n   * Executes the given action\n   * @param  {Object} action\n   */\n  _handleAction(action) {\n    action.callback();\n  },\n\n  render() {\n    var displayModes = this.props.displayModes;\n    var actions = this.props.actions;\n\n    var currentDisplayMode = _.find(displayModes, {id: this.state.currentDisplayModeId});\n\n    return (\n      <div className={classNames(this.props.className, 'Panel')}>\n        <div className=\"Panel-header\">\n          <div className=\"Panel-titleWrapper\">\n            <div className=\"Panel-title\" title={this.props.title}>\n              {this.props.title}\n            </div>\n          </div>\n          <div className=\"Panel-actions\">\n            <PanelMenu  currentDisplayModeId={this.state.currentDisplayModeId}\n                        displayModes={displayModes}\n                        actions={actions}\n                        onAction={this._handleAction}\n                        onDiplayMode={this._handleDisplayMode}/>\n          </div>\n        </div>\n        <div className=\"Panel-body\">\n          {currentDisplayMode.render()}\n        </div>\n      </div>\n    );\n  }\n\n});\n\nexport default Panel;\n"],"sourceRoot":"/source/"}