{"version":3,"sources":["components/Table.jsx"],"names":[],"mappings":"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","file":"components/Table.jsx","sourcesContent":["import React from 'react';\nimport DataTable from 'datatables';\n\nimport 'datatables-plugins/integration/bootstrap/3/dataTables.bootstrap.css';\nimport 'datatables-plugins/integration/bootstrap/3/dataTables.bootstrap.js';\n\nvar Table = React.createClass({\n\n  displayName: 'Table',\n\n  statics: {\n    getDefaultDisplayModeId() {\n      return 'table';\n    },\n\n    getDisplayModes() {\n      return [{\n        id: 'table',\n        label: 'Display Table'\n      }];\n    },\n\n    getActions() {\n      return [{\n        id: 'export table',\n        methodName: 'exportTable',\n        label: 'Export CSV'\n      }];\n    }\n  },\n\n  exportTable() {\n    console.log('Exporting table!');\n  },\n\n  componentDidMount() {\n    $(this.refs['table'].getDOMNode()).dataTable(this._getOptions());\n  },\n\n  render() {\n    return (\n      <div className=\"Table\">\n        <table ref=\"table\" className=\"table table-striped table-bordered dataTable no-footer\">\n        </table>\n      </div>\n    );\n  },\n\n  _getData() {\n    return this.props.chartData.rawData.entrySeq().map(([dataKeys, dataValues]) => {\n      var groups = dataKeys.entrySeq().map(([dimKey, groupKey]) => {\n        var group = this.props.chartData.getDimensionGroup(dimKey, groupKey);\n        return group.get('label');\n      });\n\n      var metrics = dataValues.map((value, index) => {\n        var metric = this.props.chartData.getMetric(index);\n        return metric.get('render')(value);\n      });\n\n      return groups.concat(metrics);\n    }).toJS();\n  },\n\n  _getColumns() {\n    var dimensions = this.props.chartData.dimensions.entrySeq().map(([dimensionKey, dimensionMetadata]) => {\n      return {\n        title: dimensionMetadata.get('label')\n      };\n    });\n\n    var metrics = this.props.chartData.metrics.map((metric) => {\n      return {\n        title: metric.get('label')\n      };\n    });\n\n    return dimensions.concat(metrics).toJS();\n  },\n\n  _getOptions() {\n    return {\n      data: this._getData(),\n      columns: this._getColumns(),\n      paging: false,\n      searching: false,\n      info: false,\n      drawCallback: () => {\n        this.forceUpdate();\n      }\n    };\n  }\n\n});\n\nexport default Table;\n"],"sourceRoot":"/source/"}