{"version":3,"sources":["components/charts/chart.jsx"],"names":[],"mappings":";;;;;;;;IAAO,KAAK,2BAAM,cAAc;;IAEzB,YAAY,2BAAM,yBAAyB;;IAC3C,YAAY,2BAAM,yBAAyB;;AAElD,IAAI,KAAK,GAAG,KAAK,CAAC,WAAW,CAAC;;AAE5B,aAAW,EAAE,OAAO;;AAEpB,iBAAe,EAAA,2BAAG;AAChB,WAAO;AACL,iBAAW,EAAE,IAAI;KAClB,CAAC;GACH;;AAED,aAAW,EAAA,uBAAG;AACZ,WAAO,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,WAAW,EAAE,CAAC;GACtC;;AAED,QAAM,EAAA,kBAAG;AACP,WACE;AAAC,kBAAY;;AACX,kBAAU,EAAE,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,WAAW,AAAC;AACrC,qBAAa,EAAE,IAAI,CAAC,cAAc,AAAC;;MAEnC,oBAAC,KAAK,KAAK,CAAC,KAAK,eACX,IAAI,CAAC,KAAK;AACd,WAAG,EAAC,OAAO;AACX,WAAG,EAAC,OAAO;AACX,wBAAgB,EAAE,IAAI,CAAC,qBAAqB,AAAC;AAC7C,uBAAe,EAAE,IAAI,CAAC,oBAAoB,AAAC;AAC3C,mBAAW,EAAE,IAAI,CAAC,oBAAoB,AAAC;SACvC;KACW,CACf;GACH;;AAED,gBAAc,EAAA,0BAAG;;;AACf,QAAI,IAAI,GAAG,IAAI,CAAC,KAAK,CAAC,WAAW,CAAC,QAAQ,EAAE,CAAC,GAAG,CAAC,gBAA4B;;;UAA1B,QAAQ;UAAE,UAAU;;AACrE,UAAI,MAAM,GAAG,QAAQ,CAAC,QAAQ,EAAE,CAAC,GAAG,CAAC,iBAAqB,GAAG,EAAK;;;YAA3B,MAAM;YAAE,QAAQ;;AACrD,YAAI,SAAS,GAAG,MAAK,KAAK,CAAC,SAAS,CAAC,YAAY,CAAC,MAAM,CAAC,CAAC;AAC1D,YAAI,KAAK,GAAG,MAAK,KAAK,CAAC,SAAS,CAAC,iBAAiB,CAAC,MAAM,EAAE,QAAQ,CAAC,CAAC;AACrE,eAAO,CAAC,SAAS,CAAC,GAAG,CAAC,OAAO,CAAC,EAAE,KAAK,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC,CAAC;OACrD,CAAC,CAAC;;AAEH,UAAI,OAAO,GAAG,UAAU,CAAC,GAAG,CAAC,UAAC,KAAK,EAAE,GAAG,EAAK;AAC3C,YAAI,MAAM,GAAG,MAAK,KAAK,CAAC,SAAS,CAAC,SAAS,CAAC,GAAG,CAAC,CAAC;AACjD,eAAO,CAAC,MAAM,CAAC,GAAG,CAAC,OAAO,CAAC,EAAE,MAAM,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC,KAAK,CAAC,CAAC,CAAA;OAC1D,CAAC,CAAC;;AAEH,aAAO,oBAAC,YAAY,IAAC,MAAM,EAAE,MAAM,CAAC,IAAI,EAAE,AAAC,EAAC,OAAO,EAAE,OAAO,CAAC,IAAI,EAAE,AAAC,GAAG,CAAC;KACzE,CAAC,CAAC;;AAEH,WACE;;QAAK,SAAS,EAAC,eAAe;MAC3B,IAAI,CAAC,IAAI,EAAE;KACR,CACN;GACH;;AAED,uBAAqB,EAAA,+BAAC,IAAI,EAAE;;AAE1B,QAAI,CAAC,QAAQ,CAAC,EAAC,WAAW,EAAE,IAAI,EAAC,CAAC,CAAC;GACpC;;AAED,sBAAoB,EAAA,gCAAG;;AAErB,QAAI,CAAC,QAAQ,CAAC,EAAC,WAAW,EAAE,IAAI,EAAC,CAAC,CAAC;GACpC;;CAEF,CAAC,CAAC;;iBAEY,KAAK","file":"components/charts/chart.jsx","sourcesContent":["import React from 'react/addons';\n\nimport HoverTooltip from '../tooltip/HoverTooltip';\nimport TooltipTable from '../tooltip/TooltipTable';\n\nvar Chart = React.createClass({\n\n  displayName: 'Chart',\n\n  getInitialState() {\n    return {\n      hoveredData: null\n    };\n  },\n\n  getImageURI() {\n    return this.refs.chart.getImageURI();\n  },\n\n  render() {\n    return (\n      <HoverTooltip\n        hasTooltip={!!this.state.hoveredData}\n        renderTooltip={this._renderTooltip}\n      >\n        <this.props.chart\n          {...this.props}\n          key=\"chart\"\n          ref=\"chart\"\n          onChartMouseOver={this._handleChartMouseOver}\n          onChartMouseOut={this._handleChartMouseOut}\n          onMouseMove={this._updateMousePosition}\n        />\n      </HoverTooltip>\n    );\n  },\n\n  _renderTooltip() {\n    var data = this.state.hoveredData.entrySeq().map(([dataKeys, dataValues]) => {\n      var groups = dataKeys.entrySeq().map(([dimKey, groupKey], idx) => {\n        var dimension = this.props.chartData.getDimension(dimKey);\n        var group = this.props.chartData.getDimensionGroup(dimKey, groupKey);\n        return [dimension.get('label'), group.get('label')];\n      });\n\n      var metrics = dataValues.map((value, idx) => {\n        var metric = this.props.chartData.getMetric(idx);\n        return [metric.get('label'), metric.get('render')(value)]\n      });\n\n      return <TooltipTable groups={groups.toJS()} metrics={metrics.toJS()} />;\n    });\n\n    return (\n      <div className=\"Chart-tooltip\">\n        {data.toJS()}\n      </div>\n    );\n  },\n\n  _handleChartMouseOver(data) {\n    // Show the tooltip when a chart element is hovered\n    this.setState({hoveredData: data});\n  },\n\n  _handleChartMouseOut() {\n    // Hide the tooltip when a chart element stops being hovered\n    this.setState({hoveredData: null});\n  }\n\n});\n\nexport default Chart;\n"],"sourceRoot":"/source/"}