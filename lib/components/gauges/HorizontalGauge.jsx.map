{"version":3,"sources":["components/gauges/HorizontalGauge.jsx"],"names":[],"mappings":";;;;;;;;qBAAiC,OAAO;;IAAjC,KAAK;;IAAI,SAAS,UAAT,SAAS;;IAElB,YAAY,2BAAM,yBAAyB;;IAC3C,YAAY,2BAAM,yBAAyB;;QAC3C,wBAAwB;;AAE/B,IAAI,aAAa,GAAG,SAAS,CAAC,KAAK,CAAC;AAClC,OAAK,EAAE,SAAS,CAAC,MAAM,CAAC,UAAU;AAClC,OAAK,EAAE,SAAS,CAAC,MAAM,CAAC,UAAU;AAClC,OAAK,EAAE,SAAS,CAAC,MAAM,CAAC,UAAU;CACnC,CAAC,CAAC;;AAEH,IAAM,eAAe,GAAG,KAAK,CAAC,WAAW,CAAC;;AAExC,aAAW,EAAE,iBAAiB;;AAE9B,WAAS,EAAE;;;;;;;;;AAST,OAAG,EAAE,aAAa,CAAC,UAAU;AAC7B,UAAM,EAAE,SAAS,CAAC,OAAO,CAAC,aAAa,CAAC,CAAC,UAAU;GACpD;;AAED,iBAAe,EAAA,2BAAG;AAChB,WAAO;AACL,gBAAU,EAAE,KAAK,EAClB,CAAC;GACH;;AAED,mBAAiB,EAAA,6BAAG;AAClB,QAAI,CAAC,QAAQ,CAAC;AACZ,gBAAU,EAAE,IAAI,EACjB,CAAC,CAAC;GACJ;;AAED,mBAAiB,EAAA,6BAAG;AAClB,QAAI,CAAC,QAAQ,CAAC;AACZ,gBAAU,EAAE,KAAK,EAClB,CAAC,CAAC;GACJ;;AAED,gBAAc,EAAA,0BAAG;iBACO,IAAI,CAAC,KAAK;QAA1B,MAAM,UAAN,MAAM;QAAE,GAAG,UAAH,GAAG;;AACjB,WACE,oBAAC,YAAY;AACX,YAAM,EAAE,CAAC,CAAC,GAAG,CAAC,KAAK,EAAE,GAAG,CAAC,KAAK,CAAC,CAAC,AAAC;AACjC,aAAO,EAAE,MAAM,CAAC,GAAG,CAAC,UAAC,KAAK;eAAK,CAAC,KAAK,CAAC,KAAK,EAAE,KAAK,CAAC,KAAK,CAAC;OAAA,CAAC,AAAC;MAC3D,CACF;GACH;;AAED,QAAM,EAAA,kBAAG;iBACqC,IAAI,CAAC,KAAK;QAAhD,MAAM,UAAN,MAAM;QAAE,GAAG,UAAH,GAAG;QAAE,KAAK,UAAL,KAAK;;QAAK,UAAU;;QACjC,UAAU,GAAK,IAAI,CAAC,KAAK,CAAzB,UAAU;;AAChB,WACE;AAAC,kBAAY;;AACX,kBAAU,EAAE,UAAU,AAAC;AACvB,qBAAa,EAAE,IAAI,CAAC,cAAc,AAAC;;MAEnC;;qBACM,UAAU;AACd,sBAAY,EAAE,IAAI,CAAC,iBAAiB,AAAC;AACrC,sBAAY,EAAE,IAAI,CAAC,iBAAiB,AAAC;AACrC,mBAAS,EAAC,iBAAiB;AAC3B,eAAK,eAAO,KAAK,IAAE,eAAe,EAAE,GAAG,CAAC,KAAK,GAAG;;QAE/C,MAAM,CAAC,GAAG,CAAC,UAAC,KAAK,EAAE,GAAG;iBACrB;AACE,eAAG,EAAE,GAAG,AAAC;AACT,qBAAS,EAAC,uBAAuB;AACjC,iBAAK,EAAE;AACL,mBAAK,OAAK,KAAK,CAAC,KAAK,GAAG,GAAG,CAAC,KAAK,GAAG,GAAG,MAAG;AAC1C,6BAAe,EAAE,KAAK,CAAC,KAAK,EAC7B,AAAC;YACF;SACH,CAAC;OACE;KACO,CACf;GAEH;;CAEF,CAAC,CAAC;;iBAEY,eAAe","file":"components/gauges/HorizontalGauge.jsx","sourcesContent":["import React, { PropTypes } from 'react';\n\nimport HoverTooltip from '../tooltip/HoverTooltip';\nimport TooltipTable from '../tooltip/TooltipTable';\nimport './HorizontalGauge.scss';\n\nlet stackPropType = PropTypes.shape({\n  label: PropTypes.string.isRequired,\n  value: PropTypes.number.isRequired,\n  color: PropTypes.string.isRequired\n});\n\nconst HorizontalGauge = React.createClass({\n\n  displayName: 'HorizontalGauge',\n\n  propTypes: {\n    /**\n     * Stacks are filled areas of the gauge.\n     * All is the background area of the gauge.\n     * Example: [#######====     ]\n     *  * ### is the first stack\n     *  * === is the second stack\n     *  * blank space is the `all` stack\n     */\n    all: stackPropType.isRequired,\n    stacks: PropTypes.arrayOf(stackPropType).isRequired\n  },\n\n  getInitialState() {\n    return {\n      hasTooltip: false,\n    };\n  },\n\n  _handleMouseEnter() {\n    this.setState({\n      hasTooltip: true,\n    });\n  },\n\n  _handleMouseLeave() {\n    this.setState({\n      hasTooltip: false,\n    });\n  },\n\n  _renderTooltip() {\n    let { stacks, all } = this.props;\n    return (\n      <TooltipTable\n        groups={[[all.label, all.value]]}\n        metrics={stacks.map((stack) => [stack.label, stack.value])}\n      />\n    );\n  },\n\n  render() {\n    let { stacks, all, style, ...otherProps } = this.props;\n    let { hasTooltip } = this.state;\n    return (\n      <HoverTooltip\n        hasTooltip={hasTooltip}\n        renderTooltip={this._renderTooltip}\n      >\n        <div\n          {...otherProps}\n          onMouseEnter={this._handleMouseEnter}\n          onMouseLeave={this._handleMouseLeave}\n          className=\"HorizontalGauge\"\n          style={{ ...style, backgroundColor: all.color }}\n        >\n          {stacks.map((stack, idx) => (\n            <div\n              key={idx}\n              className=\"HorizontalGauge-stack\"\n              style={{\n                width: `${stack.value / all.value * 100}%`,\n                backgroundColor: stack.color,\n              }}\n            />\n          ))}\n        </div>\n      </HoverTooltip>\n    );\n\n  }\n\n});\n\nexport default HorizontalGauge;\n"],"sourceRoot":"/source/"}